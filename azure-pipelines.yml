# Pipeline de Azure DevOps para desplegar frontend en una VM de Azure.
trigger:
  branches:
    include:
      - master
  paths:
    include:
      - frontend/**

pool:
  vmImage: ubuntu-latest

variables:
  - group: variable-group-taller

stages:
  - stage: Build_and_Test
    jobs:
      - job: BuildFrontend
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '8.17.0'
            displayName: 'Install Node.js'

          - script: |
              cd frontend
              npm install --no optionals
              npm run build
            displayName: 'npm install and build frontend'

  - stage: Deploy_to_VM
    dependsOn: Build_and_Test
    condition: succeeded()
    jobs:
      - job: DeployFrontend
        steps:
          - task: AzureCLI@2
            name: GetPublicIP
            inputs:
              azureSubscription: $(AZURE_ACCOUNT)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                PUBLIC_IP=$(az vm show \
                  --name "$(VM_NAME)" \
                  --resource-group "$(RESOURCE_GROUP)" \
                  --show-details \
                  --query "publicIps" \
                  --output tsv)

                echo "##vso[task.setvariable variable=VM_PUBLIC_IP]$PUBLIC_IP"
                echo "IP pública obtenida: $PUBLIC_IP"
            displayName: 'Obtener IP pública de la VM'

          - script: |
              echo "Instalando sshpass..."
              sudo apt-get update && sudo apt-get install -y sshpass

              echo "Conectando por SSH con usuario y contraseña... $(VM_PASSWORD) ,$(VM_USERNAME) "
              sshpass -p $(VM_PASSWORD) ssh -o StrictHostKeyChecking=no $(VM_USERNAME)@$(VM_PUBLIC_IP) << 'EOSSH'
                echo "Entrando al repositorio..."
                cd /home/azureuser/tu-repo
                sudo git pull origin master

                echo "Deteniendo el servicio frontend si ya existe..."
                sudo docker-compose -f Docker-compose.yml stop frontend || true
                sudo docker-compose -f Docker-compose.yml rm -f frontend || true

                echo "Reconstruyendo y levantando solo el servicio frontend..."
                sudo docker-compose -f Docker-compose.yml build -d frontend
                sudo docker-compose -f Docker-compose.yml up -d frontend

                echo "Frontend desplegado correctamente en la VM usando docker-compose."
              EOSSH
            displayName: 'SSH para desplegar frontend con docker-compose'

