log_format rate_limit '$binary_remote_addr Docker_IP: $remote_addr - Client_IP: $http_x_real_ip - [$time_local] "$request"';

access_log /var/log/nginx/access.log rate_limit;

# Configuración para el frontend
server {
    listen 80;
    server_name localhost;

    # Ruta principal para servir el frontend
    location / {
        proxy_pass http://frontend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}


# Configuración para los servicios de backend
server {
    listen 8000;
    server_name localhost;

   # Cabeceras para preservar la IP real
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    location /login {
        limit_req zone=login_limit burst=3 nodelay;
       
        proxy_pass http://auth-api:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /todos {
        proxy_pass http://todos-api:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /users {
        proxy_pass http://users-api:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /zipkin {
        proxy_pass http://zipkin:9411/api/v2/spans;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}